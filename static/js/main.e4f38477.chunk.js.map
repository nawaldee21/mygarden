{"version":3,"sources":["pages/logo.png","pages/Home.js","pages/About.js","pages/MyList.js","pages/MyCart.js","pages/Logo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","className","About","MyList","naw","this","mylist","map","item","index","key","src","onClick","clearItem","clearList","Component","MyCart","random","axios","url","method","then","res","setState","imgUrl","data","state","images","class","addToList","add","adopt","Logo","alt","App","cat","catIndex","indexOf","splice","to","exact","path","component","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e4f38477.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06492b95.png\";","import React from 'react';\n\n\nconst Home = (props) => {\n    return(\n        <div>\n        <h1 className=\"home\">Hello</h1>\n            <p className=\"hoo\">welcome to riyadh shelter </p>\n        </div>\n    )\n}\n\n\nexport default Home;","import React from 'react';\n\nconst About =(props) => {\n    return(\n        <body className='Login-component'>\n        <div className=\"abo\">\n          \n            <p>Riyadh Animal Shelter was founded by an activist who would offer animals in need temporary shelter and medical treatment before finding them \n                good permanent homes. \n                The numbers of animals helped grew and it was time to expand.\n\n                She finally founded Riyadh Animal Shelter in 2014 which became a center from which volunteers of various backgrounds would operate from.\n                 In 2018,\n                 a private veterinary clinic was founded to help support the shelter and its activities.\n\n                In addition to rescuing, the sheltersâ€™ \n                volunteering group aims to promote animal welfare in society through events held at schools and universities..</p>\n        </div>\n        \n    </body>\n    )\n}\n\n\nexport default About; ","import React, {Component} from 'react';\n\n\n\nclass MyList extends Component{\n    render(){\n        const naw=this.props.mylist.map((item, index)=>{\n                return (\n                    <div>\n                        <img key={index} src={item}/>\n                        <button onClick={() => this.props.clearItem(item)}>delete</button>\n                    </div>\n                )   \n            \n        })\n        return(\n            <div>\n               {naw}\n               <button onClick={() => this.props.clearList()}> delete all</button>\n            </div>\n        )\n    }\n\n}\nexport default MyList;\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport MyList from './MyList';\n\n\nclass MyCart extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      images: [],\n      imgUrl: ''\n    }\n  }\n  // componentDidMount() {\n\n    // for (let i = 0; i < 5; i++) {\n\n      // this.getImages()\n\n    // }\n    // getImages = () => {\n\n      // const newe = [...this.state.images]\n      // console.log(this.state.images);\n\n    // }\n     random = () => {\n      axios({\n        url: 'https://api.thecatapi.com/v1/images/search?format=json',\n        method: 'get'\n      })\n        .then(res => {\n          this.setState({\n            imgUrl: res.data[0].url\n          })\n        })\n    }\n    // let allTasks;\n    /////\n    // allTasks = this.state.images.map((task) => {\n    //   return <img src={task.url} />\n\n    // })\n\n    // add= ()=>{\n\n  \n    // }\n    render() {\n      \n      return (\n        <div>\n          <h1 className=\"cat\">Thinking of adding a cat to your family? \n            Here are some cats want to be your new best friend.</h1>\n            <br/>\n          <button class=\"material-icons\"onClick={this.random}>random cat</button>\n          <img onClick={this.addToList}src={this.state.imgUrl}/>\n          <button onClick={()=>this.props.add(this.state.imgUrl)}>add </button>\n          <br />\n          {/* {allTasks} */}\n        </div>\n      )\n    }\n  }\n\nexport default MyCart;","import React from 'react';\n\nimport Logo from './logo.png';\nconst adopt = () => {\n    return (\n        // <div className='headers' >\n        //     <p className='hLink'>My Cart </p>\n        //     <p className='hLink'> Home </p>\n       \n            <img class=\"logoo\"src = {Logo} alt=\"logo\" />\n    //         <p className='hLink'>My List</p>\n    //         <p className='hLink'>About</p>\n    //  </div >\n    )\n}\n\nexport default adopt;\n","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport MyCart from './pages/MyCart';\nimport Logo from './pages/Logo';\nimport MyList from './pages/MyList';\n\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\n\nclass App extends React.Component {\n\nconstructor(props){\n  super(props)\n  this.state = {\n    mylist: []\n  }\n}\nadd=(url)=>{\nthis.setState({\n  mylist: [...this.state.mylist, url]\n})\n}\n\nclearList= () => {\n  this.setState({\n    mylist : []\n  })\n}\n\nclearItem = (cat) => {\n  const mylist = this.state.mylist; //copy of orignial\n  const catIndex = mylist.indexOf(cat)\n  mylist.splice(catIndex,1);\n  this.setState({mylist})\n} \n\n\n\n\n  render(){\n  return (\n    <div>\n<Router>\n  \n        <Logo/>\n        <header>\n        <nav>\n\n          <Link className=\"hLink\" to='/'>HOME </Link>{' | '}\n           <Link className=\"hLink\" to='/About'>ABOUT </Link>{' | '}\n        <Link className=\"hLink\" to='/MyCart'>FIND A CAT </Link>\n        </nav>\n        <Link  to='/MyList'><button className=\"cta\">MY LIST </button></Link>\n</header>\n      <div>\n        \n        <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route path='/About' component={About} />\n        <Route path='/MyCart' component={ ()=> <MyCart add={this.add} /> }/>\n        <Route path='/MyList' component={()=> <MyList clearItem={this.clearItem} clearList={this.clearList} mylist={this.state.mylist}/>} />\n        </Switch>\n      </div>\n  </Router>\n  {/* <MyCart /> */}\n  \n\n   </div>\n\n    );\n  }\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}